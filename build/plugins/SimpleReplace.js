// Generated by CoffeeScript 2.0.3
  // Wiki Monkey - MediaWiki bot and editor-assistant user script
  // Copyright (C) 2011 Dario Giovannetti <dev@dariogiovannetti.net>

  // This file is part of Wiki Monkey.

  // Wiki Monkey is free software: you can redistribute it and/or modify
  // it under the terms of the GNU General Public License as published by
  // the Free Software Foundation, either version 3 of the License, or
  // (at your option) any later version.

  // Wiki Monkey is distributed in the hope that it will be useful,
  // but WITHOUT ANY WARRANTY; without even the implied warranty of
  // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  // GNU General Public License for more details.

  // You should have received a copy of the GNU General Public License
  // along with Wiki Monkey.  If not, see <http://www.gnu.org/licenses/>.
var CSS, Plugin, ref,
  boundMethodCheck = function(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new Error('Bound instance method accessed before binding'); } };

({Plugin} = require('./_Plugin'));

CSS = require('../../auxiliary/lib.js.generic/dist/CSS');

ref = module.exports.SimpleReplace = (function() {
  var configuration, makeUI, storeRegExp;

  class SimpleReplace extends Plugin {
    constructor() {
      super(...arguments);
      this.storeConfiguration = this.storeConfiguration.bind(this);
      this.mainAutoWrite = this.mainAutoWrite.bind(this);
      this.mainAutoEnd = this.mainAutoEnd.bind(this);
    }

    makeUI() {
      return makeUI();
    }

    makeBotUI() {
      var divMain, par3, summary, summaryLabel;
      divMain = makeUI();
      par3 = document.createElement('div');
      summaryLabel = document.createElement('span');
      summaryLabel.innerHTML = 'Edit summary:';
      summary = document.createElement('input');
      summary.setAttribute('type', 'text');
      summary.id = "WikiMonkey-SimpleReplace-Summary";
      par3.appendChild(summaryLabel);
      par3.appendChild(summary);
      divMain.appendChild(par3);
      return divMain;
    }

    storeConfiguration() {
      boundMethodCheck(this, ref);
      configuration = {
        pattern: document.getElementById("WikiMonkey-SimpleReplace-RegExp").value,
        ignoreCase: document.getElementById("WikiMonkey-SimpleReplace-IgnoreCase").checked,
        newString: document.getElementById("WikiMonkey-SimpleReplace-NewString").value
      };
      this.WM.Log.logHidden("Pattern: " + configuration.pattern);
      this.WM.Log.logHidden("Ignore case: " + configuration.ignoreCase);
      return this.WM.Log.logHidden("New string: " + configuration.newString);
    }

    main_editor(callNext) {
      var exc, newtext, source;
      this.storeConfiguration();
      try {
        storeRegExp();
      } catch (error) {
        exc = error;
        this.WM.Log.logError("Invalid pattern: " + exc);
        // Block the execution of this function
        return false;
      }
      source = this.WM.Editor.readSource();
      newtext = source.replace(configuration.regExp, configuration.newString);
      if (newtext !== source) {
        this.WM.Editor.writeSource(newtext);
        this.WM.Log.logInfo("Text substituted");
      }
      if (callNext) {
        return callNext();
      }
    }

    main_bot(title, callBot, chainArgs) {
      var exc, summary;
      this.storeConfiguration();
      try {
        storeRegExp();
      } catch (error) {
        exc = error;
        this.WM.Log.logError("Invalid pattern: " + exc);
        callBot(false, null);
        // Block the execution of this function
        return false;
      }
      summary = document.getElementById("WikiMonkey-SimpleReplace-Summary").value;
      if (summary !== "") {
        return this.WM.MW.callQueryEdit(title, this.WM.Plugins.SimpleReplace.mainAutoWrite, [summary, callBot]);
      } else {
        this.WM.Log.logError("The edit summary cannot be empty");
        return callBot(false, null);
      }
    }

    mainAutoWrite(title, source, timestamp, edittoken, args) {
      var callBot, newtext, summary;
      boundMethodCheck(this, ref);
      summary = args[0];
      callBot = args[1];
      newtext = source.replace(configuration.regExp, configuration.newString);
      if (newtext !== source) {
        return this.WM.MW.callAPIPost({
          action: "edit",
          bot: "1",
          title: title,
          summary: summary,
          text: newtext,
          basetimestamp: timestamp,
          token: edittoken
        }, this.WM.Plugins.SimpleReplace.mainAutoEnd, callBot, null);
      } else {
        return callBot(0, null);
      }
    }

    mainAutoEnd(res, callBot) {
      boundMethodCheck(this, ref);
      if (res.edit && res.edit.result === 'Success') {
        return callBot(1, null);
      } else if (res.error) {
        this.WM.Log.logError(res.error.info + " (" + res.error.code + ")");
        return callBot(res.error.code, null);
      } else {
        return callBot(false, null);
      }
    }

  };

  SimpleReplace.conf_default = {
    enabled: true,
    editor_menu: ["RegExp substitution"],
    bot_label: "RegExp substitution"
  };

  makeUI = function() {
    var divMain, ignoreCase, ignoreCaseLabel, newString, newStringLabel, par1, par2, regexp, regexpLabel;
    CSS.addStyleElement("#WikiMonkey-SimpleReplace div " + "{margin-bottom:0.33em;} " + "#WikiMonkey-SimpleReplace input[type='text'] " + "{margin-left:0.33em; width:60%;}");
    divMain = document.createElement('div');
    divMain.id = "WikiMonkey-SimpleReplace";
    par1 = document.createElement('div');
    regexpLabel = document.createElement('span');
    regexpLabel.innerHTML = 'RegExp pattern:';
    regexp = document.createElement('input');
    regexp.setAttribute('type', 'text');
    regexp.id = "WikiMonkey-SimpleReplace-RegExp";
    ignoreCase = document.createElement('input');
    ignoreCase.setAttribute('type', 'checkbox');
    ignoreCase.id = "WikiMonkey-SimpleReplace-IgnoreCase";
    ignoreCaseLabel = document.createElement('span');
    ignoreCaseLabel.innerHTML = 'i';
    par1.appendChild(regexpLabel);
    par1.appendChild(regexp);
    par1.appendChild(ignoreCase);
    par1.appendChild(ignoreCaseLabel);
    par2 = document.createElement('div');
    newStringLabel = document.createElement('span');
    newStringLabel.innerHTML = 'New string:';
    newString = document.createElement('input');
    newString.setAttribute('type', 'text');
    newString.id = "WikiMonkey-SimpleReplace-NewString";
    par2.appendChild(newStringLabel);
    par2.appendChild(newString);
    divMain.appendChild(par1);
    divMain.appendChild(par2);
    return divMain;
  };

  configuration = null;

  storeRegExp = function() {
    return configuration.regExp = new RegExp(configuration.pattern, "g" + (configuration.ignoreCase ? "i" : ""));
  };

  return SimpleReplace;

})();
